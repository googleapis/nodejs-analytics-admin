// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import * as gax from 'google-gax';
import {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import * as path from 'path';

import {Transform} from 'stream';
import {RequestType} from 'google-gax/build/src/apitypes';
import * as protos from '../../protos/protos';
import * as gapicConfig from './analytics_admin_service_client_config.json';

const version = require('../../../package.json').version;

/**
 *  Service Interface for the Analytics Admin API (App+Web).
 * @class
 * @memberof v1alpha
 */
export class AnalyticsAdminServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  analyticsAdminServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of AnalyticsAdminServiceClient.
   *
   * @param {object} [options] - The configuration object. See the subsequent
   *   parameters for more details.
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   */

  constructor(opts?: ClientOptions) {
    // Ensure that options include the service address and port.
    const staticMembers = this
      .constructor as typeof AnalyticsAdminServiceClient;
    const servicePath =
      opts && opts.servicePath
        ? opts.servicePath
        : opts && opts.apiEndpoint
        ? opts.apiEndpoint
        : staticMembers.servicePath;
    const port = opts && opts.port ? opts.port : staticMembers.port;

    if (!opts) {
      opts = {servicePath, port};
    }
    opts.servicePath = opts.servicePath || servicePath;
    opts.port = opts.port || port;

    // users can override the config from client side, like retry codes name.
    // The detailed structure of the clientConfig can be found here: https://github.com/googleapis/gax-nodejs/blob/master/src/gax.ts#L546
    // The way to override client config for Showcase API:
    //
    // const customConfig = {"interfaces": {"google.showcase.v1beta1.Echo": {"methods": {"Echo": {"retry_codes_name": "idempotent", "retry_params_name": "default"}}}}}
    // const showcaseClient = new showcaseClient({ projectId, customConfig });
    opts.clientConfig = opts.clientConfig || {};

    // If we're running in browser, it's OK to omit `fallback` since
    // google-gax has `browser` field in its `package.json`.
    // For Electron (which does not respect `browser` field),
    // pass `{fallback: true}` to the AnalyticsAdminServiceClient constructor.
    this._gaxModule = opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options
    // sent to the client.
    opts.scopes = (this
      .constructor as typeof AnalyticsAdminServiceClient).scopes;
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    // For Node.js, pass the path to JSON proto file.
    // For browsers, pass the JSON content.

    const nodejsProtoPath = path.join(
      __dirname,
      '..',
      '..',
      'protos',
      'protos.json'
    );
    this._protos = this._gaxGrpc.loadProto(
      opts.fallback
        ? // eslint-disable-next-line @typescript-eslint/no-var-requires
          require('../../protos/protos.json')
        : nodejsProtoPath
    );

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      accountPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}'
      ),
      accountUserLinkPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/userLinks/{user_link}'
      ),
      androidAppDataStreamPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/androidAppDataStreams/{android_app_data_stream}'
      ),
      dataSharingSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/dataSharingSettings'
      ),
      enhancedMeasurementSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/webDataStreams/{web_data_stream}/enhancedMeasurementSettings'
      ),
      firebaseLinkPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/firebaseLinks/{firebase_link}'
      ),
      globalSiteTagPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/globalSiteTag'
      ),
      googleAdsLinkPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/googleAdsLinks/{google_ads_link}'
      ),
      iosAppDataStreamPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/iosAppDataStreams/{ios_app_data_stream}'
      ),
      propertyPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}'
      ),
      propertyUserLinkPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/userLinks/{user_link}'
      ),
      webDataStreamPathTemplate: new this._gaxModule.PathTemplate(
        'properties/{property}/webDataStreams/{web_data_stream}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listAccounts: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'accounts'
      ),
      listProperties: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'properties'
      ),
      listUserLinks: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'userLinks'
      ),
      auditUserLinks: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'userLinks'
      ),
      listWebDataStreams: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'webDataStreams'
      ),
      listIosAppDataStreams: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'iosAppDataStreams'
      ),
      listAndroidAppDataStreams: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'androidAppDataStreams'
      ),
      listGoogleAdsLinks: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'googleAdsLinks'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.analytics.admin.v1alpha.AnalyticsAdminService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.analyticsAdminServiceStub) {
      return this.analyticsAdminServiceStub;
    }

    // Put together the "service stub" for
    // google.analytics.admin.v1alpha.AnalyticsAdminService.
    this.analyticsAdminServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.analytics.admin.v1alpha.AnalyticsAdminService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.analytics.admin.v1alpha
            .AnalyticsAdminService,
      this._opts
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const analyticsAdminServiceStubMethods = [
      'getAccount',
      'listAccounts',
      'deleteAccount',
      'updateAccount',
      'provisionAccountTicket',
      'getProperty',
      'listProperties',
      'createProperty',
      'deleteProperty',
      'updateProperty',
      'getUserLink',
      'batchGetUserLinks',
      'listUserLinks',
      'auditUserLinks',
      'createUserLink',
      'batchCreateUserLinks',
      'updateUserLink',
      'batchUpdateUserLinks',
      'deleteUserLink',
      'batchDeleteUserLinks',
      'getWebDataStream',
      'deleteWebDataStream',
      'updateWebDataStream',
      'createWebDataStream',
      'listWebDataStreams',
      'getIosAppDataStream',
      'deleteIosAppDataStream',
      'updateIosAppDataStream',
      'createIosAppDataStream',
      'listIosAppDataStreams',
      'getAndroidAppDataStream',
      'deleteAndroidAppDataStream',
      'updateAndroidAppDataStream',
      'createAndroidAppDataStream',
      'listAndroidAppDataStreams',
      'getEnhancedMeasurementSettings',
      'updateEnhancedMeasurementSettings',
      'createFirebaseLink',
      'updateFirebaseLink',
      'deleteFirebaseLink',
      'listFirebaseLinks',
      'getGlobalSiteTag',
      'createGoogleAdsLink',
      'updateGoogleAdsLink',
      'deleteGoogleAdsLink',
      'listGoogleAdsLinks',
      'getDataSharingSettings',
    ];
    for (const methodName of analyticsAdminServiceStubMethods) {
      const callPromise = this.analyticsAdminServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor = this.descriptors.page[methodName] || undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.analyticsAdminServiceStub;
  }

  /**
   * The DNS address for this API service.
   */
  static get servicePath() {
    return 'analyticsadmin.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   */
  static get apiEndpoint() {
    return 'analyticsadmin.googleapis.com';
  }

  /**
   * The port for this API service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/analytics.edit',
      'https://www.googleapis.com/auth/analytics.manage.users',
      'https://www.googleapis.com/auth/analytics.manage.users.readonly',
      'https://www.googleapis.com/auth/analytics.readonly',
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @param {function(Error, string)} callback - the callback to
   *   be called with the current project Id.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  getAccount(
    request: protos.google.analytics.admin.v1alpha.IGetAccountRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAccount,
      protos.google.analytics.admin.v1alpha.IGetAccountRequest | undefined,
      {} | undefined
    ]
  >;
  getAccount(
    request: protos.google.analytics.admin.v1alpha.IGetAccountRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAccount,
      | protos.google.analytics.admin.v1alpha.IGetAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getAccount(
    request: protos.google.analytics.admin.v1alpha.IGetAccountRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAccount,
      | protos.google.analytics.admin.v1alpha.IGetAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Lookup for a single Account.
   * Throws "Target not found" if no such account found, or if caller does not
   * have permissions to access it.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the account to lookup.
   *   Format: accounts/{account}
   *   Example: "accounts/100"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Account]{@link google.analytics.admin.v1alpha.Account}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getAccount(
    request: protos.google.analytics.admin.v1alpha.IGetAccountRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IAccount,
          | protos.google.analytics.admin.v1alpha.IGetAccountRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IAccount,
      | protos.google.analytics.admin.v1alpha.IGetAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAccount,
      protos.google.analytics.admin.v1alpha.IGetAccountRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getAccount(request, options, callback);
  }
  deleteAccount(
    request: protos.google.analytics.admin.v1alpha.IDeleteAccountRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.analytics.admin.v1alpha.IDeleteAccountRequest | undefined,
      {} | undefined
    ]
  >;
  deleteAccount(
    request: protos.google.analytics.admin.v1alpha.IDeleteAccountRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteAccount(
    request: protos.google.analytics.admin.v1alpha.IDeleteAccountRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Marks target Account as soft-deleted (ie: "trashed") and returns it.
   *
   * This API does not have a method to restore soft-deleted accounts.
   * However, they can be restored using the Trash Can UI.
   *
   * If the accounts are not restored before the expiration time, the account
   * and all child resources (eg: Properties, GoogleAdsLinks, Streams,
   * UserLinks) will be permanently purged.
   * https://support.google.com/analytics/answer/6154772
   *
   * Returns an error if the target is not found.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the Account to soft-delete.
   *   Format: accounts/{account}
   *   Example: "accounts/100"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteAccount(
    request: protos.google.analytics.admin.v1alpha.IDeleteAccountRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeleteAccountRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.analytics.admin.v1alpha.IDeleteAccountRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteAccount(request, options, callback);
  }
  updateAccount(
    request: protos.google.analytics.admin.v1alpha.IUpdateAccountRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAccount,
      protos.google.analytics.admin.v1alpha.IUpdateAccountRequest | undefined,
      {} | undefined
    ]
  >;
  updateAccount(
    request: protos.google.analytics.admin.v1alpha.IUpdateAccountRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAccount,
      | protos.google.analytics.admin.v1alpha.IUpdateAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateAccount(
    request: protos.google.analytics.admin.v1alpha.IUpdateAccountRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAccount,
      | protos.google.analytics.admin.v1alpha.IUpdateAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates an account.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.Account} request.account
   *   Required. The account to update.
   *   The account's `name` field is used to identify the account.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Account]{@link google.analytics.admin.v1alpha.Account}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateAccount(
    request: protos.google.analytics.admin.v1alpha.IUpdateAccountRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IAccount,
          | protos.google.analytics.admin.v1alpha.IUpdateAccountRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IAccount,
      | protos.google.analytics.admin.v1alpha.IUpdateAccountRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAccount,
      protos.google.analytics.admin.v1alpha.IUpdateAccountRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'account.name': request.account!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateAccount(request, options, callback);
  }
  provisionAccountTicket(
    request: protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProvisionAccountTicketResponse,
      (
        | protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  provisionAccountTicket(
    request: protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProvisionAccountTicketResponse,
      | protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  provisionAccountTicket(
    request: protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProvisionAccountTicketResponse,
      | protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Requests a ticket for creating an account.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.Account} request.account
   *   The account to create.
   * @param {string} request.redirectUri
   *   Redirect URI where the user will be sent after accepting Terms of Service.
   *   Must be configured in Developers Console as a Redirect URI
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ProvisionAccountTicketResponse]{@link google.analytics.admin.v1alpha.ProvisionAccountTicketResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  provisionAccountTicket(
    request: protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IProvisionAccountTicketResponse,
          | protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IProvisionAccountTicketResponse,
      | protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProvisionAccountTicketResponse,
      (
        | protos.google.analytics.admin.v1alpha.IProvisionAccountTicketRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    this.initialize();
    return this.innerApiCalls.provisionAccountTicket(
      request,
      options,
      callback
    );
  }
  getProperty(
    request: protos.google.analytics.admin.v1alpha.IGetPropertyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty,
      protos.google.analytics.admin.v1alpha.IGetPropertyRequest | undefined,
      {} | undefined
    ]
  >;
  getProperty(
    request: protos.google.analytics.admin.v1alpha.IGetPropertyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.IGetPropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getProperty(
    request: protos.google.analytics.admin.v1alpha.IGetPropertyRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.IGetPropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Lookup for a single "App+Web" Property.
   *
   * Throws "Target not found" if no such property found, if property is not
   * of the type "App+Web", or if caller does not have permissions to access it.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the property to lookup.
   *   Format: properties/{property_id}
   *   Example: "properties/1000"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Property]{@link google.analytics.admin.v1alpha.Property}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getProperty(
    request: protos.google.analytics.admin.v1alpha.IGetPropertyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IProperty,
          | protos.google.analytics.admin.v1alpha.IGetPropertyRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.IGetPropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty,
      protos.google.analytics.admin.v1alpha.IGetPropertyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getProperty(request, options, callback);
  }
  createProperty(
    request: protos.google.analytics.admin.v1alpha.ICreatePropertyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty,
      protos.google.analytics.admin.v1alpha.ICreatePropertyRequest | undefined,
      {} | undefined
    ]
  >;
  createProperty(
    request: protos.google.analytics.admin.v1alpha.ICreatePropertyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.ICreatePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createProperty(
    request: protos.google.analytics.admin.v1alpha.ICreatePropertyRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.ICreatePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates an "App+Web" property with the specified location and attributes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.Property} request.property
   *   Required. The property to create.
   *   Note: the supplied property must specify its parent.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Property]{@link google.analytics.admin.v1alpha.Property}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createProperty(
    request: protos.google.analytics.admin.v1alpha.ICreatePropertyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IProperty,
          | protos.google.analytics.admin.v1alpha.ICreatePropertyRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.ICreatePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty,
      protos.google.analytics.admin.v1alpha.ICreatePropertyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    this.initialize();
    return this.innerApiCalls.createProperty(request, options, callback);
  }
  deleteProperty(
    request: protos.google.analytics.admin.v1alpha.IDeletePropertyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.analytics.admin.v1alpha.IDeletePropertyRequest | undefined,
      {} | undefined
    ]
  >;
  deleteProperty(
    request: protos.google.analytics.admin.v1alpha.IDeletePropertyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeletePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteProperty(
    request: protos.google.analytics.admin.v1alpha.IDeletePropertyRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeletePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Marks target Property as soft-deleted (ie: "trashed") and returns it.
   *
   * This API does not have a method to restore soft-deleted properties.
   * However, they can be restored using the Trash Can UI.
   *
   * If the properties are not restored before the expiration time, the Property
   * and all child resources (eg: GoogleAdsLinks, Streams, UserLinks)
   * will be permanently purged.
   * https://support.google.com/analytics/answer/6154772
   *
   * Returns an error if the target is not found, or is not an App+Web Property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the Property to soft-delete.
   *   Format: properties/{property_id}
   *   Example: "properties/1000"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteProperty(
    request: protos.google.analytics.admin.v1alpha.IDeletePropertyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeletePropertyRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeletePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.analytics.admin.v1alpha.IDeletePropertyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteProperty(request, options, callback);
  }
  updateProperty(
    request: protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty,
      protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest | undefined,
      {} | undefined
    ]
  >;
  updateProperty(
    request: protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateProperty(
    request: protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.Property} request.property
   *   Required. The property to update.
   *   The property's `name` field is used to identify the property to be
   *   updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Property]{@link google.analytics.admin.v1alpha.Property}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateProperty(
    request: protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IProperty,
          | protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IProperty,
      | protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty,
      protos.google.analytics.admin.v1alpha.IUpdatePropertyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'property.name': request.property!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateProperty(request, options, callback);
  }
  getUserLink(
    request: protos.google.analytics.admin.v1alpha.IGetUserLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink,
      protos.google.analytics.admin.v1alpha.IGetUserLinkRequest | undefined,
      {} | undefined
    ]
  >;
  getUserLink(
    request: protos.google.analytics.admin.v1alpha.IGetUserLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.IGetUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getUserLink(
    request: protos.google.analytics.admin.v1alpha.IGetUserLinkRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.IGetUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Gets information about a user's link to an account or property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Example format: accounts/1234/userLinks/5678
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [UserLink]{@link google.analytics.admin.v1alpha.UserLink}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getUserLink(
    request: protos.google.analytics.admin.v1alpha.IGetUserLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IUserLink,
          | protos.google.analytics.admin.v1alpha.IGetUserLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.IGetUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink,
      protos.google.analytics.admin.v1alpha.IGetUserLinkRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getUserLink(request, options, callback);
  }
  batchGetUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IBatchGetUserLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  batchGetUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IBatchGetUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchGetUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IBatchGetUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Gets information about multiple users' links to an account or property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The account or property that all user links in the request are
   *   for. The parent of all provided values for the 'names' field must match
   *   this field.
   *   Example format: accounts/1234
   * @param {string[]} request.names
   *   Required. The names of the user links to retrieve.
   *   A maximum of 1000 user links can be retrieved in a batch.
   *   Format: accounts/{accountId}/userLinks/{userLinkId}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BatchGetUserLinksResponse]{@link google.analytics.admin.v1alpha.BatchGetUserLinksResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  batchGetUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IBatchGetUserLinksResponse,
          | protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IBatchGetUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IBatchGetUserLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IBatchGetUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.batchGetUserLinks(request, options, callback);
  }
  createUserLink(
    request: protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink,
      protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest | undefined,
      {} | undefined
    ]
  >;
  createUserLink(
    request: protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createUserLink(
    request: protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates a user link on an account or property.
   *
   * If the user with the specified email already has permissions on the
   * account or property, then the user's existing permissions will be unioned
   * with the permissions specified in the new UserLink.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: accounts/1234
   * @param {boolean} [request.notifyNewUser]
   *   Optional. If notify_new_user is set, then email new user that they've been given
   *   permissions on the resource.
   * @param {google.analytics.admin.v1alpha.UserLink} request.userLink
   *   Required. The user link to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [UserLink]{@link google.analytics.admin.v1alpha.UserLink}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createUserLink(
    request: protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IUserLink,
          | protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink,
      protos.google.analytics.admin.v1alpha.ICreateUserLinkRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createUserLink(request, options, callback);
  }
  batchCreateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  batchCreateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchCreateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates information about multiple users' links to an account or property.
   *
   * This method is transactional. If any UserLink cannot be created, none of
   * the UserLinks will be created.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The account or property that all user links in the request are for.
   *   This field is required. The parent field in the CreateUserLinkRequest
   *   messages must either be empty or match this field.
   *   Example format: accounts/1234
   * @param {boolean} [request.notifyNewUsers]
   *   Optional. If notify_new_users is set, then email new users that they've been given
   *   permissions on the resource.
   * @param {number[]} request.requests
   *   The requests specifying the user links to create.
   *   A maximum of 1000 user links can be created in a batch.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BatchCreateUserLinksResponse]{@link google.analytics.admin.v1alpha.BatchCreateUserLinksResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  batchCreateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksResponse,
          | protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IBatchCreateUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.batchCreateUserLinks(request, options, callback);
  }
  updateUserLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink,
      protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest | undefined,
      {} | undefined
    ]
  >;
  updateUserLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateUserLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates a user link on an account or property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.UserLink} request.userLink
   *   Required. The user link to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [UserLink]{@link google.analytics.admin.v1alpha.UserLink}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateUserLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IUserLink,
          | protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IUserLink,
      | protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink,
      protos.google.analytics.admin.v1alpha.IUpdateUserLinkRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'user_link.name': request.userLink!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateUserLink(request, options, callback);
  }
  batchUpdateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  batchUpdateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchUpdateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates information about multiple users' links to an account or property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The account or property that all user links in the request are
   *   for. The parent field in the UpdateUserLinkRequest messages must either be
   *   empty or match this field.
   *   Example format: accounts/1234
   * @param {number[]} request.requests
   *   The requests specifying the user links to update.
   *   A maximum of 1000 user links can be updated in a batch.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BatchUpdateUserLinksResponse]{@link google.analytics.admin.v1alpha.BatchUpdateUserLinksResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  batchUpdateUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksResponse,
          | protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksResponse,
      | protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IBatchUpdateUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.batchUpdateUserLinks(request, options, callback);
  }
  deleteUserLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest | undefined,
      {} | undefined
    ]
  >;
  deleteUserLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteUserLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes a user link on an account or property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Example format: accounts/1234/userLinks/5678
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteUserLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.analytics.admin.v1alpha.IDeleteUserLinkRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteUserLink(request, options, callback);
  }
  batchDeleteUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  batchDeleteUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchDeleteUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes information about multiple users' links to an account or property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The account or property that all user links in the request are
   *   for. The parent of all values for user link names to delete must match this
   *   field.
   *   Example format: accounts/1234
   * @param {number[]} request.requests
   *   The requests specifying the user links to update.
   *   A maximum of 1000 user links can be updated in a batch.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  batchDeleteUserLinks(
    request: protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IBatchDeleteUserLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.batchDeleteUserLinks(request, options, callback);
  }
  getWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Lookup for a single WebDataStream
   *
   * Throws "Target not found" if no such web data stream found, or if the
   * caller does not have permissions to access it.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the web data stream to lookup.
   *   Format: properties/{property_id}/webDataStreams/{stream_id}
   *   Example: "properties/123/webDataStreams/456"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [WebDataStream]{@link google.analytics.admin.v1alpha.WebDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IWebDataStream,
          | protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IGetWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getWebDataStream(request, options, callback);
  }
  deleteWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes a web stream on a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the web data stream to delete.
   *   Format: properties/{property_id}/webDataStreams/{stream_id}
   *   Example: "properties/123/webDataStreams/456"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteWebDataStream(request, options, callback);
  }
  updateWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates a web stream on a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.WebDataStream} request.webDataStream
   *   Required. The web stream to update.
   *   The `name` field is used to identify the web stream to be updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [WebDataStream]{@link google.analytics.admin.v1alpha.WebDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateWebDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IWebDataStream,
          | protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'web_data_stream.name': request.webDataStream!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateWebDataStream(request, options, callback);
  }
  createWebDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      (
        | protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createWebDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createWebDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates a web stream with the specified location and attributes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.WebDataStream} request.webDataStream
   *   Required. The web stream to create.
   * @param {string} request.parent
   *   Required. The parent resource where this web data stream will be created.
   *   Format: properties/123
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [WebDataStream]{@link google.analytics.admin.v1alpha.WebDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createWebDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IWebDataStream,
          | protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream,
      (
        | protos.google.analytics.admin.v1alpha.ICreateWebDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createWebDataStream(request, options, callback);
  }
  getIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Lookup for a single IosAppDataStream
   *
   * Throws "Target not found" if no such iOS app data stream found, or if the
   * caller does not have permissions to access it.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the iOS app data stream to lookup.
   *   Format: properties/{property_id}/iosAppDataStreams/{stream_id}
   *   Example: "properties/123/iosAppDataStreams/456"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [IosAppDataStream]{@link google.analytics.admin.v1alpha.IosAppDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IIosAppDataStream,
          | protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IGetIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getIosAppDataStream(request, options, callback);
  }
  deleteIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes an iOS app stream on a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the iOS app data stream to delete.
   *   Format: properties/{property_id}/iosAppDataStreams/{stream_id}
   *   Example: "properties/123/iosAppDataStreams/456"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteIosAppDataStream(
      request,
      options,
      callback
    );
  }
  updateIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates an iOS app stream on a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.IosAppDataStream} request.iosAppDataStream
   *   Required. The iOS app stream to update.
   *   The `name` field is used to identify the iOS app stream to be updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [IosAppDataStream]{@link google.analytics.admin.v1alpha.IosAppDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IIosAppDataStream,
          | protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'ios_app_data_stream.name': request.iosAppDataStream!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateIosAppDataStream(
      request,
      options,
      callback
    );
  }
  createIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates an iOS app data stream with the specified location and attributes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.IosAppDataStream} request.iosAppDataStream
   *   Required. The iOS app data stream to create.
   * @param {string} request.parent
   *   Required. The parent resource where this ios app data stream will be created.
   *   Format: properties/123
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [IosAppDataStream]{@link google.analytics.admin.v1alpha.IosAppDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createIosAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IIosAppDataStream,
          | protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.ICreateIosAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createIosAppDataStream(
      request,
      options,
      callback
    );
  }
  getAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Lookup for a single AndroidAppDataStream
   *
   * Throws "Target not found" if no such android app data stream found, or if
   * the caller does not have permissions to access it.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the android app data stream to lookup.
   *   Format: properties/{property_id}/androidAppDataStreams/{stream_id}
   *   Example: "properties/123/androidAppDataStreams/456"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AndroidAppDataStream]{@link google.analytics.admin.v1alpha.AndroidAppDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
          | protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IGetAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getAndroidAppDataStream(
      request,
      options,
      callback
    );
  }
  deleteAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes an android app stream on a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the android app data stream to delete.
   *   Format: properties/{property_id}/androidAppDataStreams/{stream_id}
   *   Example: "properties/123/androidAppDataStreams/456"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteAndroidAppDataStream(
      request,
      options,
      callback
    );
  }
  updateAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates an android app stream on a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.AndroidAppDataStream} request.androidAppDataStream
   *   Required. The android app stream to update.
   *   The `name` field is used to identify the android app stream to be updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AndroidAppDataStream]{@link google.analytics.admin.v1alpha.AndroidAppDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
          | protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'android_app_data_stream.name': request.androidAppDataStream!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateAndroidAppDataStream(
      request,
      options,
      callback
    );
  }
  createAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates an android app stream with the specified location and attributes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.AndroidAppDataStream} request.androidAppDataStream
   *   Required. The android app stream to create.
   * @param {string} request.parent
   *   Required. The parent resource where this android app data stream will be created.
   *   Format: properties/123
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AndroidAppDataStream]{@link google.analytics.admin.v1alpha.AndroidAppDataStream}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createAndroidAppDataStream(
    request: protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
          | protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      | protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream,
      (
        | protos.google.analytics.admin.v1alpha.ICreateAndroidAppDataStreamRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createAndroidAppDataStream(
      request,
      options,
      callback
    );
  }
  getEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      (
        | protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      | protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      | protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Returns the singleton enhanced measurement settings for this web stream.
   * Note that the stream must enable enhanced measurement for these settings to
   * take effect.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the settings to lookup.
   *   Format:
   *   properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings
   *   Example: "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EnhancedMeasurementSettings]{@link google.analytics.admin.v1alpha.EnhancedMeasurementSettings}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
          | protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      | protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      (
        | protos.google.analytics.admin.v1alpha.IGetEnhancedMeasurementSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getEnhancedMeasurementSettings(
      request,
      options,
      callback
    );
  }
  updateEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      | protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      | protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates the singleton enhanced measurement settings for this web stream.
   * Note that the stream must enable enhanced measurement for these settings to
   * take effect.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.EnhancedMeasurementSettings} request.enhancedMeasurementSettings
   *   Required. The settings to update.
   *   The `name` field is used to identify the settings to be updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EnhancedMeasurementSettings]{@link google.analytics.admin.v1alpha.EnhancedMeasurementSettings}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateEnhancedMeasurementSettings(
    request: protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
          | protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      | protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IEnhancedMeasurementSettings,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateEnhancedMeasurementSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'enhanced_measurement_settings.name':
        request.enhancedMeasurementSettings!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateEnhancedMeasurementSettings(
      request,
      options,
      callback
    );
  }
  createFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      (
        | protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      | protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      | protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates a FirebaseLink.
   *
   * Properties can have at most one FirebaseLink.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Format: properties/{property_id}
   *   Example: properties/1234
   * @param {google.analytics.admin.v1alpha.FirebaseLink} request.firebaseLink
   *   Required. The Firebase link to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [FirebaseLink]{@link google.analytics.admin.v1alpha.FirebaseLink}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IFirebaseLink,
          | protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      | protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      (
        | protos.google.analytics.admin.v1alpha.ICreateFirebaseLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createFirebaseLink(request, options, callback);
  }
  updateFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      | protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      | protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates a FirebaseLink on a property
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.FirebaseLink} request.firebaseLink
   *   Required. The Firebase link to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [FirebaseLink]{@link google.analytics.admin.v1alpha.FirebaseLink}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IFirebaseLink,
          | protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      | protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IFirebaseLink,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateFirebaseLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'firebase_link.name': request.firebaseLink!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateFirebaseLink(request, options, callback);
  }
  deleteFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes a FirebaseLink on a property
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id}
   *   Example: properties/1234/firebaseLinks/5678
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteFirebaseLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteFirebaseLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteFirebaseLink(request, options, callback);
  }
  listFirebaseLinks(
    request: protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IListFirebaseLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  listFirebaseLinks(
    request: protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IListFirebaseLinksResponse,
      | protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  listFirebaseLinks(
    request: protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IListFirebaseLinksResponse,
      | protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Lists FirebaseLinks on a property.
   * Properties can have at most one FirebaseLink.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Format: properties/{property_id}
   *   Example: properties/1234
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ListFirebaseLinksResponse]{@link google.analytics.admin.v1alpha.ListFirebaseLinksResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listFirebaseLinks(
    request: protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IListFirebaseLinksResponse,
          | protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IListFirebaseLinksResponse,
      | protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IListFirebaseLinksResponse,
      (
        | protos.google.analytics.admin.v1alpha.IListFirebaseLinksRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listFirebaseLinks(request, options, callback);
  }
  getGlobalSiteTag(
    request: protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGlobalSiteTag,
      (
        | protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getGlobalSiteTag(
    request: protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IGlobalSiteTag,
      | protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getGlobalSiteTag(
    request: protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IGlobalSiteTag,
      | protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Returns the Site Tag for the specified web stream.
   * Site Tags are immutable singletons.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the site tag to lookup.
   *   Note that site tags are singletons and do not have unique IDs.
   *   Format: properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag
   *   Example: "properties/123/webDataStreams/456/globalSiteTag"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [GlobalSiteTag]{@link google.analytics.admin.v1alpha.GlobalSiteTag}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getGlobalSiteTag(
    request: protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IGlobalSiteTag,
          | protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IGlobalSiteTag,
      | protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGlobalSiteTag,
      (
        | protos.google.analytics.admin.v1alpha.IGetGlobalSiteTagRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getGlobalSiteTag(request, options, callback);
  }
  createGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      (
        | protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      | protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      | protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Creates a GoogleAdsLink.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: properties/1234
   * @param {google.analytics.admin.v1alpha.GoogleAdsLink} request.googleAdsLink
   *   Required. The GoogleAdsLink to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [GoogleAdsLink]{@link google.analytics.admin.v1alpha.GoogleAdsLink}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
          | protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      | protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      (
        | protos.google.analytics.admin.v1alpha.ICreateGoogleAdsLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.createGoogleAdsLink(request, options, callback);
  }
  updateGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      | protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      | protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Updates a GoogleAdsLink on a property
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.analytics.admin.v1alpha.GoogleAdsLink} request.googleAdsLink
   *   The GoogleAdsLink to update
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated. Omitted fields will not be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [GoogleAdsLink]{@link google.analytics.admin.v1alpha.GoogleAdsLink}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
          | protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      | protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink,
      (
        | protos.google.analytics.admin.v1alpha.IUpdateGoogleAdsLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'google_ads_link.name': request.googleAdsLink!.name || '',
    });
    this.initialize();
    return this.innerApiCalls.updateGoogleAdsLink(request, options, callback);
  }
  deleteGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Deletes a GoogleAdsLink on a property
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Example format: properties/1234/googleAdsLinks/5678
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteGoogleAdsLink(
    request: protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.analytics.admin.v1alpha.IDeleteGoogleAdsLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.deleteGoogleAdsLink(request, options, callback);
  }
  getDataSharingSettings(
    request: protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IDataSharingSettings,
      (
        | protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getDataSharingSettings(
    request: protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IDataSharingSettings,
      | protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDataSharingSettings(
    request: protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest,
    callback: Callback<
      protos.google.analytics.admin.v1alpha.IDataSharingSettings,
      | protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  /**
   * Get data sharing settings on an account.
   * Data sharing settings are singletons.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the settings to lookup.
   *   Format: accounts/{account}/dataSharingSettings
   *   Example: "accounts/1000/dataSharingSettings"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DataSharingSettings]{@link google.analytics.admin.v1alpha.DataSharingSettings}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getDataSharingSettings(
    request: protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.analytics.admin.v1alpha.IDataSharingSettings,
          | protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.analytics.admin.v1alpha.IDataSharingSettings,
      | protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IDataSharingSettings,
      (
        | protos.google.analytics.admin.v1alpha.IGetDataSharingSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    this.initialize();
    return this.innerApiCalls.getDataSharingSettings(
      request,
      options,
      callback
    );
  }

  listAccounts(
    request: protos.google.analytics.admin.v1alpha.IListAccountsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAccount[],
      protos.google.analytics.admin.v1alpha.IListAccountsRequest | null,
      protos.google.analytics.admin.v1alpha.IListAccountsResponse
    ]
  >;
  listAccounts(
    request: protos.google.analytics.admin.v1alpha.IListAccountsRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListAccountsRequest,
      | protos.google.analytics.admin.v1alpha.IListAccountsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAccount
    >
  ): void;
  listAccounts(
    request: protos.google.analytics.admin.v1alpha.IListAccountsRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListAccountsRequest,
      | protos.google.analytics.admin.v1alpha.IListAccountsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAccount
    >
  ): void;
  /**
   * Returns all accounts accessible by the caller.
   *
   * Note that these accounts might not currently have App+Web properties.
   * Soft-deleted (ie: "trashed") accounts are excluded by default.
   * Returns an empty list if no relevant accounts are found.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {number} request.pageSize
   *   The maximum number of resources to return. The service may return
   *   fewer than this value, even if there are additional pages.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAccounts` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListAccounts` must
   *   match the call that provided the page token.
   * @param {boolean} request.showDeleted
   *   Whether to include soft-deleted (ie: "trashed") Accounts in the
   *   results. Accounts can be inspected to determine whether they are deleted or
   *   not.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Account]{@link google.analytics.admin.v1alpha.Account}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [Account]{@link google.analytics.admin.v1alpha.Account} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListAccountsRequest]{@link google.analytics.admin.v1alpha.ListAccountsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListAccountsResponse]{@link google.analytics.admin.v1alpha.ListAccountsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listAccounts(
    request: protos.google.analytics.admin.v1alpha.IListAccountsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IListAccountsRequest,
          | protos.google.analytics.admin.v1alpha.IListAccountsResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IAccount
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListAccountsRequest,
      | protos.google.analytics.admin.v1alpha.IListAccountsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAccount
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAccount[],
      protos.google.analytics.admin.v1alpha.IListAccountsRequest | null,
      protos.google.analytics.admin.v1alpha.IListAccountsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    this.initialize();
    return this.innerApiCalls.listAccounts(request, options, callback);
  }

  /**
   * Equivalent to {@link listAccounts}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listAccounts} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {number} request.pageSize
   *   The maximum number of resources to return. The service may return
   *   fewer than this value, even if there are additional pages.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAccounts` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListAccounts` must
   *   match the call that provided the page token.
   * @param {boolean} request.showDeleted
   *   Whether to include soft-deleted (ie: "trashed") Accounts in the
   *   results. Accounts can be inspected to determine whether they are deleted or
   *   not.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Account]{@link google.analytics.admin.v1alpha.Account} on 'data' event.
   */
  listAccountsStream(
    request?: protos.google.analytics.admin.v1alpha.IListAccountsRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listAccounts.createStream(
      this.innerApiCalls.listAccounts as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listAccounts}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {number} request.pageSize
   *   The maximum number of resources to return. The service may return
   *   fewer than this value, even if there are additional pages.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAccounts` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListAccounts` must
   *   match the call that provided the page token.
   * @param {boolean} request.showDeleted
   *   Whether to include soft-deleted (ie: "trashed") Accounts in the
   *   results. Accounts can be inspected to determine whether they are deleted or
   *   not.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listAccountsAsync(
    request?: protos.google.analytics.admin.v1alpha.IListAccountsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.analytics.admin.v1alpha.IAccount> {
    request = request || {};
    options = options || {};
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listAccounts.asyncIterate(
      this.innerApiCalls['listAccounts'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.analytics.admin.v1alpha.IAccount>;
  }
  listProperties(
    request: protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty[],
      protos.google.analytics.admin.v1alpha.IListPropertiesRequest | null,
      protos.google.analytics.admin.v1alpha.IListPropertiesResponse
    ]
  >;
  listProperties(
    request: protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
      | protos.google.analytics.admin.v1alpha.IListPropertiesResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IProperty
    >
  ): void;
  listProperties(
    request: protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
      | protos.google.analytics.admin.v1alpha.IListPropertiesResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IProperty
    >
  ): void;
  /**
   * Returns child Properties under the specified parent Account.
   *
   * Only "App+Web" properties will be returned.
   * Properties will be excluded if the caller does not have access.
   * Soft-deleted (ie: "trashed") properties are excluded by default.
   * Returns an empty list if no relevant properties are found.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.filter
   *   Required. An expression for filtering the results of the request.
   *   Fields eligible for filtering are:
   *   `parent:`(The resource name of the parent account) or
   *   `firebase_project:`(The id or number of the linked firebase project).
   *   Some examples of filters:
   *
   *   | Filter                      | Description                               |
   *   |-----------------------------|-------------------------------------------|
   *   | parent:accounts/123         | The account with account id: 123.         |
   *   | firebase_project:project-id | The firebase project with id: project-id. |
   *   | firebase_project:123        | The firebase project with number: 123.    |
   * @param {number} request.pageSize
   *   The maximum number of resources to return. The service may return
   *   fewer than this value, even if there are additional pages.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListProperties` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListProperties` must
   *   match the call that provided the page token.
   * @param {boolean} request.showDeleted
   *   Whether to include soft-deleted (ie: "trashed") Properties in the
   *   results. Properties can be inspected to determine whether they are deleted
   *   or not.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Property]{@link google.analytics.admin.v1alpha.Property}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [Property]{@link google.analytics.admin.v1alpha.Property} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListPropertiesRequest]{@link google.analytics.admin.v1alpha.ListPropertiesRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListPropertiesResponse]{@link google.analytics.admin.v1alpha.ListPropertiesResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listProperties(
    request: protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
          | protos.google.analytics.admin.v1alpha.IListPropertiesResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IProperty
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
      | protos.google.analytics.admin.v1alpha.IListPropertiesResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IProperty
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IProperty[],
      protos.google.analytics.admin.v1alpha.IListPropertiesRequest | null,
      protos.google.analytics.admin.v1alpha.IListPropertiesResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    this.initialize();
    return this.innerApiCalls.listProperties(request, options, callback);
  }

  /**
   * Equivalent to {@link listProperties}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listProperties} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.filter
   *   Required. An expression for filtering the results of the request.
   *   Fields eligible for filtering are:
   *   `parent:`(The resource name of the parent account) or
   *   `firebase_project:`(The id or number of the linked firebase project).
   *   Some examples of filters:
   *
   *   | Filter                      | Description                               |
   *   |-----------------------------|-------------------------------------------|
   *   | parent:accounts/123         | The account with account id: 123.         |
   *   | firebase_project:project-id | The firebase project with id: project-id. |
   *   | firebase_project:123        | The firebase project with number: 123.    |
   * @param {number} request.pageSize
   *   The maximum number of resources to return. The service may return
   *   fewer than this value, even if there are additional pages.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListProperties` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListProperties` must
   *   match the call that provided the page token.
   * @param {boolean} request.showDeleted
   *   Whether to include soft-deleted (ie: "trashed") Properties in the
   *   results. Properties can be inspected to determine whether they are deleted
   *   or not.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Property]{@link google.analytics.admin.v1alpha.Property} on 'data' event.
   */
  listPropertiesStream(
    request?: protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listProperties.createStream(
      this.innerApiCalls.listProperties as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listProperties}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.filter
   *   Required. An expression for filtering the results of the request.
   *   Fields eligible for filtering are:
   *   `parent:`(The resource name of the parent account) or
   *   `firebase_project:`(The id or number of the linked firebase project).
   *   Some examples of filters:
   *
   *   | Filter                      | Description                               |
   *   |-----------------------------|-------------------------------------------|
   *   | parent:accounts/123         | The account with account id: 123.         |
   *   | firebase_project:project-id | The firebase project with id: project-id. |
   *   | firebase_project:123        | The firebase project with number: 123.    |
   * @param {number} request.pageSize
   *   The maximum number of resources to return. The service may return
   *   fewer than this value, even if there are additional pages.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListProperties` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListProperties` must
   *   match the call that provided the page token.
   * @param {boolean} request.showDeleted
   *   Whether to include soft-deleted (ie: "trashed") Properties in the
   *   results. Properties can be inspected to determine whether they are deleted
   *   or not.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listPropertiesAsync(
    request?: protos.google.analytics.admin.v1alpha.IListPropertiesRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.analytics.admin.v1alpha.IProperty> {
    request = request || {};
    options = options || {};
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listProperties.asyncIterate(
      this.innerApiCalls['listProperties'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.analytics.admin.v1alpha.IProperty>;
  }
  listUserLinks(
    request: protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink[],
      protos.google.analytics.admin.v1alpha.IListUserLinksRequest | null,
      protos.google.analytics.admin.v1alpha.IListUserLinksResponse
    ]
  >;
  listUserLinks(
    request: protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
      | protos.google.analytics.admin.v1alpha.IListUserLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IUserLink
    >
  ): void;
  listUserLinks(
    request: protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
      | protos.google.analytics.admin.v1alpha.IListUserLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IUserLink
    >
  ): void;
  /**
   * Lists all user links on an account or property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: accounts/1234
   * @param {number} request.pageSize
   *   The maximum number of user links to return.
   *   The service may return fewer than this value.
   *   If unspecified, at most 200 user links will be returned.
   *   The maximum value is 500; values above 500 will be coerced to 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListUserLinks` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListUserLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [UserLink]{@link google.analytics.admin.v1alpha.UserLink}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [UserLink]{@link google.analytics.admin.v1alpha.UserLink} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListUserLinksRequest]{@link google.analytics.admin.v1alpha.ListUserLinksRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListUserLinksResponse]{@link google.analytics.admin.v1alpha.ListUserLinksResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listUserLinks(
    request: protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
          | protos.google.analytics.admin.v1alpha.IListUserLinksResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IUserLink
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
      | protos.google.analytics.admin.v1alpha.IListUserLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IUserLink
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IUserLink[],
      protos.google.analytics.admin.v1alpha.IListUserLinksRequest | null,
      protos.google.analytics.admin.v1alpha.IListUserLinksResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listUserLinks(request, options, callback);
  }

  /**
   * Equivalent to {@link listUserLinks}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listUserLinks} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: accounts/1234
   * @param {number} request.pageSize
   *   The maximum number of user links to return.
   *   The service may return fewer than this value.
   *   If unspecified, at most 200 user links will be returned.
   *   The maximum value is 500; values above 500 will be coerced to 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListUserLinks` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListUserLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [UserLink]{@link google.analytics.admin.v1alpha.UserLink} on 'data' event.
   */
  listUserLinksStream(
    request?: protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listUserLinks.createStream(
      this.innerApiCalls.listUserLinks as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listUserLinks}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: accounts/1234
   * @param {number} request.pageSize
   *   The maximum number of user links to return.
   *   The service may return fewer than this value.
   *   If unspecified, at most 200 user links will be returned.
   *   The maximum value is 500; values above 500 will be coerced to 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListUserLinks` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListUserLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listUserLinksAsync(
    request?: protos.google.analytics.admin.v1alpha.IListUserLinksRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.analytics.admin.v1alpha.IUserLink> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listUserLinks.asyncIterate(
      this.innerApiCalls['listUserLinks'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.analytics.admin.v1alpha.IUserLink>;
  }
  auditUserLinks(
    request: protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAuditUserLink[],
      protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest | null,
      protos.google.analytics.admin.v1alpha.IAuditUserLinksResponse
    ]
  >;
  auditUserLinks(
    request: protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
      | protos.google.analytics.admin.v1alpha.IAuditUserLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAuditUserLink
    >
  ): void;
  auditUserLinks(
    request: protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
      | protos.google.analytics.admin.v1alpha.IAuditUserLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAuditUserLink
    >
  ): void;
  /**
   * Lists all user links on an account or property, including implicit ones
   * that come from effective permissions granted by groups or organization
   * admin roles.
   *
   * If a returned user link does not have direct permissions, they cannot
   * be removed from the account or property directly with the DeleteUserLink
   * command. They have to be removed from the group/etc that gives them
   * permissions, which is currently only usable/discoverable in the GA or GMP
   * UIs.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: accounts/1234
   * @param {number} request.pageSize
   *   The maximum number of user links to return.
   *   The service may return fewer than this value.
   *   If unspecified, at most 1000 user links will be returned.
   *   The maximum value is 5000; values above 5000 will be coerced to 5000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `AuditUserLinks` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `AuditUserLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [AuditUserLink]{@link google.analytics.admin.v1alpha.AuditUserLink}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [AuditUserLink]{@link google.analytics.admin.v1alpha.AuditUserLink} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [AuditUserLinksRequest]{@link google.analytics.admin.v1alpha.AuditUserLinksRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [AuditUserLinksResponse]{@link google.analytics.admin.v1alpha.AuditUserLinksResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  auditUserLinks(
    request: protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
          | protos.google.analytics.admin.v1alpha.IAuditUserLinksResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IAuditUserLink
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
      | protos.google.analytics.admin.v1alpha.IAuditUserLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAuditUserLink
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAuditUserLink[],
      protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest | null,
      protos.google.analytics.admin.v1alpha.IAuditUserLinksResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.auditUserLinks(request, options, callback);
  }

  /**
   * Equivalent to {@link auditUserLinks}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link auditUserLinks} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: accounts/1234
   * @param {number} request.pageSize
   *   The maximum number of user links to return.
   *   The service may return fewer than this value.
   *   If unspecified, at most 1000 user links will be returned.
   *   The maximum value is 5000; values above 5000 will be coerced to 5000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `AuditUserLinks` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `AuditUserLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [AuditUserLink]{@link google.analytics.admin.v1alpha.AuditUserLink} on 'data' event.
   */
  auditUserLinksStream(
    request?: protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.auditUserLinks.createStream(
      this.innerApiCalls.auditUserLinks as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link auditUserLinks}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: accounts/1234
   * @param {number} request.pageSize
   *   The maximum number of user links to return.
   *   The service may return fewer than this value.
   *   If unspecified, at most 1000 user links will be returned.
   *   The maximum value is 5000; values above 5000 will be coerced to 5000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `AuditUserLinks` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `AuditUserLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  auditUserLinksAsync(
    request?: protos.google.analytics.admin.v1alpha.IAuditUserLinksRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.analytics.admin.v1alpha.IAuditUserLink> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.auditUserLinks.asyncIterate(
      this.innerApiCalls['auditUserLinks'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.analytics.admin.v1alpha.IAuditUserLink>;
  }
  listWebDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream[],
      protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest | null,
      protos.google.analytics.admin.v1alpha.IListWebDataStreamsResponse
    ]
  >;
  listWebDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListWebDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IWebDataStream
    >
  ): void;
  listWebDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListWebDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IWebDataStream
    >
  ): void;
  /**
   * Returns child web data streams under the specified parent property.
   *
   * Web data streams will be excluded if the caller does not have access.
   * Returns an empty list if no relevant web data streams are found.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to list results of web streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListWebDataStreams` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListWebDataStreams` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [WebDataStream]{@link google.analytics.admin.v1alpha.WebDataStream}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [WebDataStream]{@link google.analytics.admin.v1alpha.WebDataStream} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListWebDataStreamsRequest]{@link google.analytics.admin.v1alpha.ListWebDataStreamsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListWebDataStreamsResponse]{@link google.analytics.admin.v1alpha.ListWebDataStreamsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listWebDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
          | protos.google.analytics.admin.v1alpha.IListWebDataStreamsResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IWebDataStream
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListWebDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IWebDataStream
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IWebDataStream[],
      protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest | null,
      protos.google.analytics.admin.v1alpha.IListWebDataStreamsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listWebDataStreams(request, options, callback);
  }

  /**
   * Equivalent to {@link listWebDataStreams}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listWebDataStreams} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to list results of web streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListWebDataStreams` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListWebDataStreams` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [WebDataStream]{@link google.analytics.admin.v1alpha.WebDataStream} on 'data' event.
   */
  listWebDataStreamsStream(
    request?: protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listWebDataStreams.createStream(
      this.innerApiCalls.listWebDataStreams as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listWebDataStreams}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to list results of web streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListWebDataStreams` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListWebDataStreams` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listWebDataStreamsAsync(
    request?: protos.google.analytics.admin.v1alpha.IListWebDataStreamsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.analytics.admin.v1alpha.IWebDataStream> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listWebDataStreams.asyncIterate(
      this.innerApiCalls['listWebDataStreams'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.analytics.admin.v1alpha.IWebDataStream>;
  }
  listIosAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream[],
      protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest | null,
      protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsResponse
    ]
  >;
  listIosAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IIosAppDataStream
    >
  ): void;
  listIosAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IIosAppDataStream
    >
  ): void;
  /**
   * Returns child iOS app data streams under the specified parent property.
   *
   * iOS app data streams will be excluded if the caller does not have access.
   * Returns an empty list if no relevant iOS app data streams are found.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to list results of app streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListIosAppDataStreams`
   *   call. Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListIosAppDataStreams`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [IosAppDataStream]{@link google.analytics.admin.v1alpha.IosAppDataStream}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [IosAppDataStream]{@link google.analytics.admin.v1alpha.IosAppDataStream} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListIosAppDataStreamsRequest]{@link google.analytics.admin.v1alpha.ListIosAppDataStreamsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListIosAppDataStreamsResponse]{@link google.analytics.admin.v1alpha.ListIosAppDataStreamsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listIosAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
          | protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IIosAppDataStream
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IIosAppDataStream
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IIosAppDataStream[],
      protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest | null,
      protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listIosAppDataStreams(request, options, callback);
  }

  /**
   * Equivalent to {@link listIosAppDataStreams}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listIosAppDataStreams} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to list results of app streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListIosAppDataStreams`
   *   call. Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListIosAppDataStreams`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [IosAppDataStream]{@link google.analytics.admin.v1alpha.IosAppDataStream} on 'data' event.
   */
  listIosAppDataStreamsStream(
    request?: protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listIosAppDataStreams.createStream(
      this.innerApiCalls.listIosAppDataStreams as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listIosAppDataStreams}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to list results of app streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListIosAppDataStreams`
   *   call. Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListIosAppDataStreams`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listIosAppDataStreamsAsync(
    request?: protos.google.analytics.admin.v1alpha.IListIosAppDataStreamsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.analytics.admin.v1alpha.IIosAppDataStream> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listIosAppDataStreams.asyncIterate(
      this.innerApiCalls['listIosAppDataStreams'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.analytics.admin.v1alpha.IIosAppDataStream>;
  }
  listAndroidAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream[],
      protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest | null,
      protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsResponse
    ]
  >;
  listAndroidAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream
    >
  ): void;
  listAndroidAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream
    >
  ): void;
  /**
   * Returns child android app streams under the specified parent property.
   *
   * Android app streams will be excluded if the caller does not have access.
   * Returns an empty list if no relevant android app streams are found.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to limit results to app streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous call. Provide this to
   *   retrieve the subsequent page.
   *   When paginating, all other parameters provided to
   *   `ListAndroidAppDataStreams` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [AndroidAppDataStream]{@link google.analytics.admin.v1alpha.AndroidAppDataStream}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [AndroidAppDataStream]{@link google.analytics.admin.v1alpha.AndroidAppDataStream} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListAndroidAppDataStreamsRequest]{@link google.analytics.admin.v1alpha.ListAndroidAppDataStreamsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListAndroidAppDataStreamsResponse]{@link google.analytics.admin.v1alpha.ListAndroidAppDataStreamsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listAndroidAppDataStreams(
    request: protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
          | protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IAndroidAppDataStream
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
      | protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream[],
      protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest | null,
      protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listAndroidAppDataStreams(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to {@link listAndroidAppDataStreams}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listAndroidAppDataStreams} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to limit results to app streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous call. Provide this to
   *   retrieve the subsequent page.
   *   When paginating, all other parameters provided to
   *   `ListAndroidAppDataStreams` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [AndroidAppDataStream]{@link google.analytics.admin.v1alpha.AndroidAppDataStream} on 'data' event.
   */
  listAndroidAppDataStreamsStream(
    request?: protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listAndroidAppDataStreams.createStream(
      this.innerApiCalls.listAndroidAppDataStreams as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listAndroidAppDataStreams}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent property.
   *   For example, to limit results to app streams under the property with Id
   *   123: "properties/123"
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200; (higher values will be coerced to the maximum)
   * @param {string} request.pageToken
   *   A page token, received from a previous call. Provide this to
   *   retrieve the subsequent page.
   *   When paginating, all other parameters provided to
   *   `ListAndroidAppDataStreams` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listAndroidAppDataStreamsAsync(
    request?: protos.google.analytics.admin.v1alpha.IListAndroidAppDataStreamsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<
    protos.google.analytics.admin.v1alpha.IAndroidAppDataStream
  > {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listAndroidAppDataStreams.asyncIterate(
      this.innerApiCalls['listAndroidAppDataStreams'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<
      protos.google.analytics.admin.v1alpha.IAndroidAppDataStream
    >;
  }
  listGoogleAdsLinks(
    request: protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink[],
      protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest | null,
      protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksResponse
    ]
  >;
  listGoogleAdsLinks(
    request: protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
    options: gax.CallOptions,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
      | protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink
    >
  ): void;
  listGoogleAdsLinks(
    request: protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
    callback: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
      | protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink
    >
  ): void;
  /**
   * Lists GoogleAdsLinks on a property.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: properties/1234
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200 (higher values will be coerced to the maximum).
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListGoogleAdsLinks` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListGoogleAdsLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [GoogleAdsLink]{@link google.analytics.admin.v1alpha.GoogleAdsLink}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [GoogleAdsLink]{@link google.analytics.admin.v1alpha.GoogleAdsLink} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListGoogleAdsLinksRequest]{@link google.analytics.admin.v1alpha.ListGoogleAdsLinksRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListGoogleAdsLinksResponse]{@link google.analytics.admin.v1alpha.ListGoogleAdsLinksResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listGoogleAdsLinks(
    request: protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | PaginationCallback<
          protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
          | protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksResponse
          | null
          | undefined,
          protos.google.analytics.admin.v1alpha.IGoogleAdsLink
        >,
    callback?: PaginationCallback<
      protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
      | protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksResponse
      | null
      | undefined,
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink
    >
  ): Promise<
    [
      protos.google.analytics.admin.v1alpha.IGoogleAdsLink[],
      protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest | null,
      protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    this.initialize();
    return this.innerApiCalls.listGoogleAdsLinks(request, options, callback);
  }

  /**
   * Equivalent to {@link listGoogleAdsLinks}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listGoogleAdsLinks} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: properties/1234
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200 (higher values will be coerced to the maximum).
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListGoogleAdsLinks` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListGoogleAdsLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [GoogleAdsLink]{@link google.analytics.admin.v1alpha.GoogleAdsLink} on 'data' event.
   */
  listGoogleAdsLinksStream(
    request?: protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
    options?: gax.CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listGoogleAdsLinks.createStream(
      this.innerApiCalls.listGoogleAdsLinks as gax.GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to {@link listGoogleAdsLinks}, but returns an iterable object.
   *
   * for-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example format: properties/1234
   * @param {number} request.pageSize
   *   The maximum number of resources to return.
   *   If unspecified, at most 50 resources will be returned.
   *   The maximum value is 200 (higher values will be coerced to the maximum).
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListGoogleAdsLinks` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListGoogleAdsLinks` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   */
  listGoogleAdsLinksAsync(
    request?: protos.google.analytics.admin.v1alpha.IListGoogleAdsLinksRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.analytics.admin.v1alpha.IGoogleAdsLink> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    options = options || {};
    const callSettings = new gax.CallSettings(options);
    this.initialize();
    return this.descriptors.page.listGoogleAdsLinks.asyncIterate(
      this.innerApiCalls['listGoogleAdsLinks'] as GaxCall,
      (request as unknown) as RequestType,
      callSettings
    ) as AsyncIterable<protos.google.analytics.admin.v1alpha.IGoogleAdsLink>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified account resource name string.
   *
   * @param {string} account
   * @returns {string} Resource name string.
   */
  accountPath(account: string) {
    return this.pathTemplates.accountPathTemplate.render({
      account: account,
    });
  }

  /**
   * Parse the account from Account resource.
   *
   * @param {string} accountName
   *   A fully-qualified path representing Account resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromAccountName(accountName: string) {
    return this.pathTemplates.accountPathTemplate.match(accountName).account;
  }

  /**
   * Return a fully-qualified accountUserLink resource name string.
   *
   * @param {string} account
   * @param {string} user_link
   * @returns {string} Resource name string.
   */
  accountUserLinkPath(account: string, userLink: string) {
    return this.pathTemplates.accountUserLinkPathTemplate.render({
      account: account,
      user_link: userLink,
    });
  }

  /**
   * Parse the account from AccountUserLink resource.
   *
   * @param {string} accountUserLinkName
   *   A fully-qualified path representing account_user_link resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromAccountUserLinkName(accountUserLinkName: string) {
    return this.pathTemplates.accountUserLinkPathTemplate.match(
      accountUserLinkName
    ).account;
  }

  /**
   * Parse the user_link from AccountUserLink resource.
   *
   * @param {string} accountUserLinkName
   *   A fully-qualified path representing account_user_link resource.
   * @returns {string} A string representing the user_link.
   */
  matchUserLinkFromAccountUserLinkName(accountUserLinkName: string) {
    return this.pathTemplates.accountUserLinkPathTemplate.match(
      accountUserLinkName
    ).user_link;
  }

  /**
   * Return a fully-qualified androidAppDataStream resource name string.
   *
   * @param {string} property
   * @param {string} android_app_data_stream
   * @returns {string} Resource name string.
   */
  androidAppDataStreamPath(property: string, androidAppDataStream: string) {
    return this.pathTemplates.androidAppDataStreamPathTemplate.render({
      property: property,
      android_app_data_stream: androidAppDataStream,
    });
  }

  /**
   * Parse the property from AndroidAppDataStream resource.
   *
   * @param {string} androidAppDataStreamName
   *   A fully-qualified path representing AndroidAppDataStream resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromAndroidAppDataStreamName(androidAppDataStreamName: string) {
    return this.pathTemplates.androidAppDataStreamPathTemplate.match(
      androidAppDataStreamName
    ).property;
  }

  /**
   * Parse the android_app_data_stream from AndroidAppDataStream resource.
   *
   * @param {string} androidAppDataStreamName
   *   A fully-qualified path representing AndroidAppDataStream resource.
   * @returns {string} A string representing the android_app_data_stream.
   */
  matchAndroidAppDataStreamFromAndroidAppDataStreamName(
    androidAppDataStreamName: string
  ) {
    return this.pathTemplates.androidAppDataStreamPathTemplate.match(
      androidAppDataStreamName
    ).android_app_data_stream;
  }

  /**
   * Return a fully-qualified dataSharingSettings resource name string.
   *
   * @param {string} account
   * @returns {string} Resource name string.
   */
  dataSharingSettingsPath(account: string) {
    return this.pathTemplates.dataSharingSettingsPathTemplate.render({
      account: account,
    });
  }

  /**
   * Parse the account from DataSharingSettings resource.
   *
   * @param {string} dataSharingSettingsName
   *   A fully-qualified path representing DataSharingSettings resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromDataSharingSettingsName(dataSharingSettingsName: string) {
    return this.pathTemplates.dataSharingSettingsPathTemplate.match(
      dataSharingSettingsName
    ).account;
  }

  /**
   * Return a fully-qualified enhancedMeasurementSettings resource name string.
   *
   * @param {string} property
   * @param {string} web_data_stream
   * @returns {string} Resource name string.
   */
  enhancedMeasurementSettingsPath(property: string, webDataStream: string) {
    return this.pathTemplates.enhancedMeasurementSettingsPathTemplate.render({
      property: property,
      web_data_stream: webDataStream,
    });
  }

  /**
   * Parse the property from EnhancedMeasurementSettings resource.
   *
   * @param {string} enhancedMeasurementSettingsName
   *   A fully-qualified path representing EnhancedMeasurementSettings resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromEnhancedMeasurementSettingsName(
    enhancedMeasurementSettingsName: string
  ) {
    return this.pathTemplates.enhancedMeasurementSettingsPathTemplate.match(
      enhancedMeasurementSettingsName
    ).property;
  }

  /**
   * Parse the web_data_stream from EnhancedMeasurementSettings resource.
   *
   * @param {string} enhancedMeasurementSettingsName
   *   A fully-qualified path representing EnhancedMeasurementSettings resource.
   * @returns {string} A string representing the web_data_stream.
   */
  matchWebDataStreamFromEnhancedMeasurementSettingsName(
    enhancedMeasurementSettingsName: string
  ) {
    return this.pathTemplates.enhancedMeasurementSettingsPathTemplate.match(
      enhancedMeasurementSettingsName
    ).web_data_stream;
  }

  /**
   * Return a fully-qualified firebaseLink resource name string.
   *
   * @param {string} property
   * @param {string} firebase_link
   * @returns {string} Resource name string.
   */
  firebaseLinkPath(property: string, firebaseLink: string) {
    return this.pathTemplates.firebaseLinkPathTemplate.render({
      property: property,
      firebase_link: firebaseLink,
    });
  }

  /**
   * Parse the property from FirebaseLink resource.
   *
   * @param {string} firebaseLinkName
   *   A fully-qualified path representing FirebaseLink resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromFirebaseLinkName(firebaseLinkName: string) {
    return this.pathTemplates.firebaseLinkPathTemplate.match(firebaseLinkName)
      .property;
  }

  /**
   * Parse the firebase_link from FirebaseLink resource.
   *
   * @param {string} firebaseLinkName
   *   A fully-qualified path representing FirebaseLink resource.
   * @returns {string} A string representing the firebase_link.
   */
  matchFirebaseLinkFromFirebaseLinkName(firebaseLinkName: string) {
    return this.pathTemplates.firebaseLinkPathTemplate.match(firebaseLinkName)
      .firebase_link;
  }

  /**
   * Return a fully-qualified globalSiteTag resource name string.
   *
   * @param {string} property
   * @returns {string} Resource name string.
   */
  globalSiteTagPath(property: string) {
    return this.pathTemplates.globalSiteTagPathTemplate.render({
      property: property,
    });
  }

  /**
   * Parse the property from GlobalSiteTag resource.
   *
   * @param {string} globalSiteTagName
   *   A fully-qualified path representing GlobalSiteTag resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromGlobalSiteTagName(globalSiteTagName: string) {
    return this.pathTemplates.globalSiteTagPathTemplate.match(globalSiteTagName)
      .property;
  }

  /**
   * Return a fully-qualified googleAdsLink resource name string.
   *
   * @param {string} property
   * @param {string} google_ads_link
   * @returns {string} Resource name string.
   */
  googleAdsLinkPath(property: string, googleAdsLink: string) {
    return this.pathTemplates.googleAdsLinkPathTemplate.render({
      property: property,
      google_ads_link: googleAdsLink,
    });
  }

  /**
   * Parse the property from GoogleAdsLink resource.
   *
   * @param {string} googleAdsLinkName
   *   A fully-qualified path representing GoogleAdsLink resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromGoogleAdsLinkName(googleAdsLinkName: string) {
    return this.pathTemplates.googleAdsLinkPathTemplate.match(googleAdsLinkName)
      .property;
  }

  /**
   * Parse the google_ads_link from GoogleAdsLink resource.
   *
   * @param {string} googleAdsLinkName
   *   A fully-qualified path representing GoogleAdsLink resource.
   * @returns {string} A string representing the google_ads_link.
   */
  matchGoogleAdsLinkFromGoogleAdsLinkName(googleAdsLinkName: string) {
    return this.pathTemplates.googleAdsLinkPathTemplate.match(googleAdsLinkName)
      .google_ads_link;
  }

  /**
   * Return a fully-qualified iosAppDataStream resource name string.
   *
   * @param {string} property
   * @param {string} ios_app_data_stream
   * @returns {string} Resource name string.
   */
  iosAppDataStreamPath(property: string, iosAppDataStream: string) {
    return this.pathTemplates.iosAppDataStreamPathTemplate.render({
      property: property,
      ios_app_data_stream: iosAppDataStream,
    });
  }

  /**
   * Parse the property from IosAppDataStream resource.
   *
   * @param {string} iosAppDataStreamName
   *   A fully-qualified path representing IosAppDataStream resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromIosAppDataStreamName(iosAppDataStreamName: string) {
    return this.pathTemplates.iosAppDataStreamPathTemplate.match(
      iosAppDataStreamName
    ).property;
  }

  /**
   * Parse the ios_app_data_stream from IosAppDataStream resource.
   *
   * @param {string} iosAppDataStreamName
   *   A fully-qualified path representing IosAppDataStream resource.
   * @returns {string} A string representing the ios_app_data_stream.
   */
  matchIosAppDataStreamFromIosAppDataStreamName(iosAppDataStreamName: string) {
    return this.pathTemplates.iosAppDataStreamPathTemplate.match(
      iosAppDataStreamName
    ).ios_app_data_stream;
  }

  /**
   * Return a fully-qualified property resource name string.
   *
   * @param {string} property
   * @returns {string} Resource name string.
   */
  propertyPath(property: string) {
    return this.pathTemplates.propertyPathTemplate.render({
      property: property,
    });
  }

  /**
   * Parse the property from Property resource.
   *
   * @param {string} propertyName
   *   A fully-qualified path representing Property resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromPropertyName(propertyName: string) {
    return this.pathTemplates.propertyPathTemplate.match(propertyName).property;
  }

  /**
   * Return a fully-qualified propertyUserLink resource name string.
   *
   * @param {string} property
   * @param {string} user_link
   * @returns {string} Resource name string.
   */
  propertyUserLinkPath(property: string, userLink: string) {
    return this.pathTemplates.propertyUserLinkPathTemplate.render({
      property: property,
      user_link: userLink,
    });
  }

  /**
   * Parse the property from PropertyUserLink resource.
   *
   * @param {string} propertyUserLinkName
   *   A fully-qualified path representing property_user_link resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromPropertyUserLinkName(propertyUserLinkName: string) {
    return this.pathTemplates.propertyUserLinkPathTemplate.match(
      propertyUserLinkName
    ).property;
  }

  /**
   * Parse the user_link from PropertyUserLink resource.
   *
   * @param {string} propertyUserLinkName
   *   A fully-qualified path representing property_user_link resource.
   * @returns {string} A string representing the user_link.
   */
  matchUserLinkFromPropertyUserLinkName(propertyUserLinkName: string) {
    return this.pathTemplates.propertyUserLinkPathTemplate.match(
      propertyUserLinkName
    ).user_link;
  }

  /**
   * Return a fully-qualified webDataStream resource name string.
   *
   * @param {string} property
   * @param {string} web_data_stream
   * @returns {string} Resource name string.
   */
  webDataStreamPath(property: string, webDataStream: string) {
    return this.pathTemplates.webDataStreamPathTemplate.render({
      property: property,
      web_data_stream: webDataStream,
    });
  }

  /**
   * Parse the property from WebDataStream resource.
   *
   * @param {string} webDataStreamName
   *   A fully-qualified path representing WebDataStream resource.
   * @returns {string} A string representing the property.
   */
  matchPropertyFromWebDataStreamName(webDataStreamName: string) {
    return this.pathTemplates.webDataStreamPathTemplate.match(webDataStreamName)
      .property;
  }

  /**
   * Parse the web_data_stream from WebDataStream resource.
   *
   * @param {string} webDataStreamName
   *   A fully-qualified path representing WebDataStream resource.
   * @returns {string} A string representing the web_data_stream.
   */
  matchWebDataStreamFromWebDataStreamName(webDataStreamName: string) {
    return this.pathTemplates.webDataStreamPathTemplate.match(webDataStreamName)
      .web_data_stream;
  }

  /**
   * Terminate the GRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   */
  close(): Promise<void> {
    this.initialize();
    if (!this._terminated) {
      return this.analyticsAdminServiceStub!.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
